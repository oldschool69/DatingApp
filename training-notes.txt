- nuget package como gerenciador de pacotes

- Microsoft.EntityFramework.<data base> é o ORM usado para 
  trabalhar com bancos relacionais
  
- Outra opção ao EntityFramework e o FluentAPI

- dotnet ef é a tool usada para rodar o migration do database

- http server usa mvc através do namespace Microsoft.AspnetCore.Mvc

- código assincrono usando Task<>, async and await

- SinalR 

	- Bilioteca open source que fornece funcionalidade web real time para aplicações
	
	- Chat apps
	
	- Aplicações que necessitam notificações
	
	- Apps de Dashboarding e monitoramento
	
	- Suporta
	
		- WebSockets
		
		- Server-Sent events
		
		- Long polling
		
	- Reddis 
	
		- database usado em ambientes distribuidos para manter estado entre múltiplas
               instancias do servidor
			   
	    - In memory storage utilizado entre multiplas instancias dos servidores		   
		

- Comandos

    - dotnet run (inicia o server)

    - dotnet watch run (inicia o servidor qdo um arquivo é modificado)
    
    - dotnet new gitignore (cria um novo arquivo .gitignore)
	
	- dotnet tool install --global dotnet-ef (instala o entity framework)
    
    - Migration
    
    	- dotnet ef migrations add UserPasswordAdded (criar uma migration nova)
    	
    	- dotnet ef database update (atualiza o db baseado na migration)
    	
    	- dotnet ef database drop (perform clean-up on the database)
		
		- dotnet ef migrations remove (remove as ultimas migrations adicionadas)
		


  - ASP.Net identity (substitui o JWT Token)

		- Fortemente desafiado, escrito e testado pela Microsoft

		- Role management
		
		- Policy based authorization
		
		- UserManager<T>
		
		- SignInManager<T>
		
		- RoleManager<T>
    	
  
  - Angular
  
  	- Suporta two way binding
  	
        - Commandos ng cli
        
        	- ng g s <service-name> --skip tests (criar novo serviço (sem testes))
        	
        	- ng g -h (para ver as opções)
        	
        	- ng g c <component-name> (criar novo componente)
        	
        	- ng g guard <guard-name>
        	
        	- ng g m <module-name> --flat (cria novo módulo sem criar a pasta)
        	
        	- ng g interceptor <interceptor-name>  (cria um novo interceptor de requests ou response)
			
			- ng g resolver <resolver-name>  (cria um novo resolver. Utilizado para recuperar os dados antes de construir o componente)
			
			- ng g d <directive-name> (cria uma diretiva customizada, do tipo *ngIf, *ngFor etc)
        	
        - services são singletones (duram enquanto a aplicação estiver rodando) 	
        
        - componentes tem o tempo de vida mais curto (morrem quando o módulo é destruido)
        
        - Processamento assíncrono feito com Observables 
        
        	- Usando Async Pipe "<li *ngFor='let member of service.getMembers() | async'>{{member.username}}</>", o 
        	  Angular gerencia o "unsubscribe" do Observable automaticamente, não sendo necessário chamar explicitamente
        	  
        - operador !! converte um objeto para boolean. Se o objeto é nullo, converte para false.
        
        - subscribe sem unsubscribe pode causar memory leaks!

		- Typescript
		
			- optional chainning operador "?" torna uma property opcional
			
			
		
			
			
        	  
        	   
        	
        			
  	  	
    
    
